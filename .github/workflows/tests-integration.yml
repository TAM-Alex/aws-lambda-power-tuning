name: aws-lambda-power-tuning-integration-tests
run-name: ${{ github.actor }} is running integration tests
permissions:
  id-token: write
  contents: read

on:
  push:
    branches:
      - 'master'
  pull_request:

env:
  # stack names are reused across jobs
  STACK_NAME_DEFAULTS: aws-lpt-gh-defaults
  STACK_NAME_S3: aws-lpt-gh-s3
  STACK_NAME_VPC: aws-lpt-gh-vpc
  STACK_NAME_LAMBDA_RESOURCE: aws-lpt-gh-lambda-resource
  STACK_NAME_CUSTOM_PARAMS: aws-lpt-gh-custom-params

  # deployment parameters are reused across jobs
  PowerValues: 512,1024,1536 # shorter list
  VisualizationURL: https://my-custom-url.io/
  LambdaResource: 'arn:aws:lambda:eu-west-1:*:function:*' # specific region
  TotalExecutionTimeout: '900' #max value
  PermissionsBoundary: arn:aws:iam::aws:policy/AdministratorAccess
  S3Bucket: lpt-payloads # existing bucket
  S3Key: "payload.json" # only allow this object
  LayerSdkName: custom-layer-name
  LogGroupRetentionInDays: 7
  SecurityGroupIds: sg-06ad5b959d0ce9f57 # existing SG
  SubnetIDs: subnet-0126a3daed78354c7,subnet-00e2995006f41811e # existing subnets

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # this will deploy the 5 stacks in parallel,
        # without defining each job individually
        # (see the conditional trick below)
        stack: ['default', 'vpc', 's3', 'resource', 'custom']
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'npm'
      - run: npm ci
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          audience: sts.amazonaws.com
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
      - run: sam validate
      - run: sam build --use-container

      # deploy with default params
      - run: |
            if [[ "${{ matrix.stack }}" == "default" ]]
            then
              sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --s3-bucket ${{ secrets.AWS_S3_BUCKET }} --capabilities CAPABILITY_IAM --region ${{ secrets.AWS_REGION }} \
               --stack-name $STACK_NAME_DEFAULTS-${GITHUB_REF_NAME/\//-}
            fi

      # deploy with VPC params
      - run: |
            if [[ "${{ matrix.stack }}" == "vpc" ]]
            then
              sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --s3-bucket ${{ secrets.AWS_S3_BUCKET }} --capabilities CAPABILITY_IAM --region ${{ secrets.AWS_REGION }} \
               --stack-name $STACK_NAME_VPC-${GITHUB_REF_NAME/\//-} \
               --parameter-overrides subnetIds=$SubnetIDs securityGroupIds=$SecurityGroupIds
            fi

      # deploy with S3 payload params
      - run: |
            if [[ "${{ matrix.stack }}" == "s3" ]]
            then
              sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --s3-bucket ${{ secrets.AWS_S3_BUCKET }} --capabilities CAPABILITY_IAM --region ${{ secrets.AWS_REGION }} \
               --stack-name $STACK_NAME_S3-${GITHUB_REF_NAME/\//-} \
               --parameter-overrides payloadS3Bucket=$S3Bucket payloadS3Key=$S3Key
            fi

      # deploy with regional limitation (via Lambda Resource)
      - run: |
            if [[ "${{ matrix.stack }}" == "resource" ]]
            then
              sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --s3-bucket ${{ secrets.AWS_S3_BUCKET }} --capabilities CAPABILITY_IAM --region ${{ secrets.AWS_REGION }} \
               --stack-name $STACK_NAME_LAMBDA_RESOURCE-${GITHUB_REF_NAME/\//-} \
               --parameter-overrides lambdaResource=$LambdaResource
            fi


      # deploy with a bunch of custom parameters
      - run: |
            if [[ "${{ matrix.stack }}" == "custom" ]]
            then
              sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --s3-bucket ${{ secrets.AWS_S3_BUCKET }} --capabilities CAPABILITY_IAM --region ${{ secrets.AWS_REGION }} \
               --stack-name $STACK_NAME_CUSTOM_PARAMS-${GITHUB_REF_NAME/\//-} \
               --parameter-overrides \
                PowerValues=$PowerValues \
                visualizationURL=$VisualizationURL \
                totalExecutionTimeout=$TotalExecutionTimeout \
                layerSdkName=$LayerSdkName \
                logGroupRetentionInDays=$LogGroupRetentionInDays \
                permissionsBoundary=$PermissionsBoundary
            fi

  test:
    needs: deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # this will test the 5 stacks in parallel,
        # without defining each job individually
        # (see the conditional trick below)
        stack: ['default', 'vpc', 's3', 'resource', 'custom']
    steps:
      - run: echo "Running tests for stack ${{ matrix.stack }}"